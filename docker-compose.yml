version: '3.8'

services:
  # LocalStack - Simula S3, DynamoDB (NO RDS, usamos MySQL real)
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"            # LocalStack Gateway - TODOS los servicios
    environment:
      - SERVICES=s3,dynamodb   # Solo S3 y DynamoDB (RDS NO está soportado en LocalStack free)
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=mx-central-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - PERSISTENCE=1           # Persistir datos entre reinicios
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

    networks:
      - app-network

  # MySQL Database #1 (simula RDS principal)
  mysql-primary:
    image: mysql:8.0
    container_name: mysql-primary
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: my-sql-rds-hot
      MYSQL_USER: admin
      MYSQL_PASSWORD: 3deAsada.
    volumes:
      - mysql-primary-data:/var/lib/mysql
      - ./init-db-primary.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # MySQL Database #2 (simula RDS secundario - ej: analytics)
  mysql-secondary:
    image: mysql:8.0
    container_name: mysql-secondary
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: analytics_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: 3deAsada.
    volumes:
      - mysql-secondary-data:/var/lib/mysql
      - ./init-db-secondary.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # API Gateway / Backend (Node.js)
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      # MySQL Primary (RDS principal)
      - DB_PRIMARY_HOST=mysql-primary
      - DB_PRIMARY_PORT=3306
      - DB_PRIMARY_USER=admin
      - DB_PRIMARY_PASSWORD=3deAsada.
      - DB_PRIMARY_NAME=my-sql-rds-hot
      # MySQL Secondary (RDS secundario)
      - DB_SECONDARY_HOST=mysql-secondary
      - DB_SECONDARY_PORT=3306
      - DB_SECONDARY_USER=admin
      - DB_SECONDARY_PASSWORD=3deAsada.
      - DB_SECONDARY_NAME=analytics_db
      # JWT
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      # LocalStack (S3 + DynamoDB)
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_REGION=mx-central-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - S3_BUCKET=local-bucket
      - DYNAMODB_TABLE=sessions
    volumes:
      - ./api:/app
      - /app/node_modules
    depends_on:
      mysql-primary:
        condition: service_healthy
      mysql-secondary:
        condition: service_healthy
      localstack:
        condition: service_started
    networks:
      - app-network
    command: npm run dev


  # Inicializador de LocalStack (crea bucket S3 y tabla DynamoDB)
  localstack-init:
    image: amazon/aws-cli
    container_name: localstack-init
    depends_on:
      - localstack
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=mx-central-1
    entrypoint: /bin/sh
    command: >
      -c "
        echo 'Esperando LocalStack...';
        sleep 10;
        
        echo 'Creando bucket S3...';
        aws --endpoint-url=http://localstack:4566 s3 mb s3://local-bucket || true;
        
        echo 'Creando carpetas en S3...';
        aws --endpoint-url=http://localstack:4566 s3api put-object --bucket local-bucket --key profile/;
        aws --endpoint-url=http://localstack:4566 s3api put-object --bucket local-bucket --key INE/;
        aws --endpoint-url=http://localstack:4566 s3api put-object --bucket local-bucket --key Work_permit/;
        
        echo 'Listando buckets...';
        aws --endpoint-url=http://localstack:4566 s3 ls;
        
        echo 'Creando tabla DynamoDB...';
        aws --endpoint-url=http://localstack:4566 dynamodb create-table --table-name sessions --attribute-definitions AttributeName=id,AttributeType=S --key-schema AttributeName=id,KeyType=HASH --billing-mode PAY_PER_REQUEST || true;
        echo 'Inicialización completa!';
      "
    networks:
      - app-network

volumes:
  mysql-primary-data:
  mysql-secondary-data:
  localstack-data:

networks:
  app-network: